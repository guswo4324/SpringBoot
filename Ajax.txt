1. AJAX (Asynchronous JavaScript and XML)
가장 널리 사용되는 비동기 통신 방식
페이지 전체를 새로고침하지 않고 서버와 데이터를 주고받을 수 있게 해줌

비동기성: 웹 페이지의 응답성을 유지하면서 백그라운드에서 데이터를 로드할 수 있어 사용자 경험이 좋음

부분 업데이트: 페이지 전체를 새로고침하지 않고 필요한 부분만 업데이트할 수 있어 네트워크 트래픽과 로딩 시간을 줄임

다양한 데이터 형식 지원: 텍스트, XML, JSON 등 다양한 형식의 데이터를 주고받을 수 있습니다.


🔍 POST 요청을 주로 사용한 이유
직원 정보의 생성(Create), 수정(Update), 삭제(Delete), 퇴사처리와 같은 작업에 POST 요청을 사용

데이터 변경 작업 (CUD): HTTP 메서드의 GET은 주로 서버로부터 **데이터를 조회(Read)**할 때 사용되며, 서버의 상태를 변경하지 않아야 하는(멱등성, Idempotence) 것이 권장

반면 POST는 서버에 새로운 데이터를 생성하거나, 기존 데이터를 변경하거나, 특정 작업을 수행(데이터 변경)할 때 사용됩니다. 
직원 등록, 수정, 삭제, 퇴사 처리는 모두 서버의 데이터베이스 상태를 변경하는 작업이므로, HTTP 명세에 따라 POST 메서드를 사용하는 것이 적절

보안 (데이터 전송 방식): GET 요청은 전송하려는 데이터(파라미터)가 URL의 쿼리 스트링(?key=value&key2=value2)에 노출됩니다. 이는 사용자 인증 정보나 민감한 데이터가 URL에 그대로 드러나 보안에 취약할 수 있습니다. 또한, URL 길이에 제한이 있어 많은 양의 데이터를 전송하기 어렵습니다.

POST 요청은 데이터를 HTTP 요청 본문(Body)에 담아 전송. 
이 방식은 URL에 데이터가 노출되지 않아 GET보다 상대적으로 보안성이 높고, 전송할 수 있는 데이터 양에도 제한이 없습니다. 
직원 정보(이름, 전화번호, 메모 등)나 사진 파일과 같은 데이터를 안전하고 충분한 양으로 전송하기에 POST가 적합합니다.

멱등성 (Idempotence) vs 비멱등성:

GET 요청은 멱등성을 가짐. 즉, 동일한 GET 요청을 여러 번 보내도 서버의 상태가 동일하게 유지되어야 합니다. 
예를 들어, 게시글을 조회하는 것은 몇 번을 해도 게시글 내용이 변하지 않습니다.

POST 요청은 일반적으로 비멱등성을 가집니다. 동일한 POST 요청을 여러 번 보내면 서버의 상태가 여러 번 변경될 수 있습니다 (예: 동일한 등록 요청을 여러 번 보내면 중복된 직원이 여러 명 등록될 수 있음). 코드에서 직원 등록/수정/삭제/퇴사처리는 매 요청마다 서버의 데이터가 변경되므로 비멱등적인 POST가 적합합니다.

파일을 서버로 업로드할 때는 HTTP 요청 본문에 파일 데이터를 담아야 합니다. 
이는 GET 요청으로는 불가능하며, 반드시 POST 또는 PUT 요청을 사용해야 합니다. 코드의 사진 업로드 기능에 POST가 사용된 것도 이 때문입니다.

<select id="selectRoomsByName" parameterType="String" resultType="com.mobydick.hms.room.vo.RoomVO">

<insert id="insertRoom" parameterType="com.mobydick.hms.room.vo.RoomVO">


건네주는거 받는거

받아서 쳐넣기
